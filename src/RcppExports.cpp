// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// asSparseMat
SEXP asSparseMat(const Eigen::Map<Eigen::MatrixXd> X);
RcppExport SEXP _ungroup_asSparseMat(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd> >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(asSparseMat(X));
    return rcpp_result_gen;
END_RCPP
}
// pclm_loop
SEXP pclm_loop(const Eigen::MappedSparseMatrix<double> C, const Eigen::Map<Eigen::MatrixXd> P, const Eigen::Map<Eigen::MatrixXd> B, const Eigen::Map<Eigen::VectorXd> y, double maxiter, double tol);
RcppExport SEXP _ungroup_pclm_loop(SEXP CSEXP, SEXP PSEXP, SEXP BSEXP, SEXP ySEXP, SEXP maxiterSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MappedSparseMatrix<double> >::type C(CSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd> >::type P(PSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd> >::type B(BSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd> >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(pclm_loop(C, P, B, y, maxiter, tol));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ungroup_asSparseMat", (DL_FUNC) &_ungroup_asSparseMat, 1},
    {"_ungroup_pclm_loop", (DL_FUNC) &_ungroup_pclm_loop, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_ungroup(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
